(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{453:function(t,r,e){"use strict";e.r(r);var _=e(2),n=Object(_.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"计算机cpu架构介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机cpu架构介绍"}},[t._v("#")]),t._v(" 计算机"),r("code",[t._v("CPU")]),t._v("架构介绍")]),t._v(" "),r("h4",{attrs:{id:"_1-指令集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-指令集"}},[t._v("#")]),t._v(" 1. 指令集")]),t._v(" "),r("p",[r("strong",[t._v("指令集")]),t._v("是一个计算机系统支持的所有机器指令的集合，被视为软硬件之间的分界面。计算机系统的基本工作过程是：程序员编写的软件经过"),r("strong",[t._v("编译器翻译成可执行程序，即一个机器指令的序列")]),t._v("，然后由底层硬件逐条读取这些指令来执行。因此，软件最终体现为指令集中的各种指令。")]),t._v(" "),r("p",[t._v("所编写的软件程序到底该选择什么样的编译器编译？这取决于软件运行平台，不同的平台由于CPU架构存在区别，也就是指令集是不同的，需要选择不同的编译器编译。")]),t._v(" "),r("h4",{attrs:{id:"_2-指令集架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-指令集架构"}},[t._v("#")]),t._v(" 2.指令集架构")]),t._v(" "),r("p",[t._v("指令集架构（Instruction Set Architecture，缩写为 ISA），又称指令集或指令集体系，是"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84",target:"_blank",rel:"noopener noreferrer"}},[t._v("计算机体系结构"),r("OutboundLink")],1),t._v("中与"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E7%A8%8B%E5%BA%8F%E8%A8%AD%E8%A8%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("程序设计"),r("OutboundLink")],1),t._v("有关的部分，包含了"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("基本数据类型"),r("OutboundLink")],1),t._v("，指令集，"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%AF%84%E5%AD%98%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("寄存器"),r("OutboundLink")],1),t._v("，"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%AF%BB%E5%9D%80%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("寻址模式"),r("OutboundLink")],1),t._v("，"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/w/index.php%3Ftitle%3D%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB%26action%3Dedit%26redlink%3D1",target:"_blank",rel:"noopener noreferrer"}},[t._v("存储体系"),r("OutboundLink")],1),t._v("，"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E4%B8%AD%E6%96%B7",target:"_blank",rel:"noopener noreferrer"}},[t._v("中断"),r("OutboundLink")],1),t._v("，"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("异常处理"),r("OutboundLink")],1),t._v("以及外部 I/O。指令集架构包含一系列的 opcode 即"),r("strong",[t._v("操作码")]),t._v("（机器语言），以及"),r("strong",[t._v("由特定处理器执行的基本命令")]),t._v("。")]),t._v(" "),r("p",[t._v("ISA 的两大阵营根据指令系统复杂程度的不同，可以分为 CISC（复杂指令系统计算机）和 RISC（精简指令系统计算机）两大阵营。")]),t._v(" "),r("ul",[r("li",[t._v("**CISC 体系结构：**CISC 通过设置一些功能复杂的指令，将原本由软件实现的常用功能改用硬件指令实现，以提高计算机的执行速度。早期的计算机系统几乎都采用了 CISC 架构，特别是微型机中的 Intel 和 AMD 早期CPU。然而，CISC 结构的目标是强化指令功能，减少程序的指令条数，以提高性能。")]),t._v(" "),r("li",[t._v("**RISC 体系结构：**RISC 通过简化计算机指令功能，只保留那些能在一个节拍内执行完成的指令，而将较复杂的功能用子程序来实现。RISC 指令系统仅包含最常用的简单指令，通过硬件优化设计，实现高性能。RISC 技术在移动和物联网领域占据了大部分市场份额。近些年，RISC体系架构开始进军PC电脑，如Apple Mac")])]),t._v(" "),r("p",[t._v("CISC和RISC两大指令集架构，没有绝对的好与坏之分，选择适合自己需求的体系架构才是关键。两种指令集架构的区别可以总结如下：")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th"),t._v(" "),r("th",[t._v("CISC")]),t._v(" "),r("th",[t._v("RISC")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("设计目标")]),t._v(" "),r("td",[t._v("为实现一些复杂功能和通用处理")]),t._v(" "),r("td",[t._v("追求简单、高效的指令集")])]),t._v(" "),r("tr",[r("td",[t._v("指令特点")]),t._v(" "),r("td",[t._v("具有大量且复杂的指令，这种指令可以执行多种任务，例如内存和浮点数计算等")]),t._v(" "),r("td",[t._v("精简指令集，指令数量少且长度固定。每个指令只执行固定操作，复杂任务通过指令组合实现。")])]),t._v(" "),r("tr",[r("td",[t._v("特点")]),t._v(" "),r("td",[t._v("代码简单，实现复杂任务，但增加物理元器件设计的复杂度和功耗大")]),t._v(" "),r("td",[t._v("处理器更加高效、适用于流水线，且物理元器件设计简单、电路设计周期短，功耗小")])]),t._v(" "),r("tr",[r("td",[t._v("应用范围")]),t._v(" "),r("td",[t._v("与特定领域相关，常用于专业机")]),t._v(" "),r("td",[t._v("通用机、智能设备")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("指令复杂，可以执行复杂计算任务的系统，如科学计算、图像处理等。")]),t._v(" "),r("td",[t._v("指令简单，可以高效执行简单任务的系统，如服务器、嵌入式设备等。")])])])]),t._v(" "),r("h4",{attrs:{id:"_3-常见isa"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-常见isa"}},[t._v("#")]),t._v(" 3.常见ISA")]),t._v(" "),r("h5",{attrs:{id:"_3-1-x86架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-x86架构"}},[t._v("#")]),t._v(" 3.1 X86架构")]),t._v(" "),r("p",[t._v("X86 是一个"),r("strong",[t._v("指令集家族")]),t._v("，包括 "),r("strong",[t._v("X86-32")]),t._v("（IA-32）和 "),r("strong",[t._v("X86-64")]),t._v("（"),r("strong",[t._v("AMD64")]),t._v("）。X86 是目前世界上最流行的指令集，虽然其架构设计可能不是最优的，但其兼容性非常好，可以运行 32 位甚至 16 位的程序。 "),r("strong",[t._v("该架构 CPU 主要是 Intel 和 AMD 两家公司，这种 CPU 常用在 PC 机上，包括 Windows，macOS 和 Linux。")])]),t._v(" "),r("h5",{attrs:{id:"_3-2arm架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2arm架构"}},[t._v("#")]),t._v(" 3.2ARM架构")]),t._v(" "),r("p",[t._v("ARM 属于 RISC 指令集架构，适用于嵌入式系统设计。"),r("strong",[t._v("ARM 占据了手机等移动设备的大部分市场份额")]),t._v("。ARM 公司本身不生产芯片，只出售芯片技术授权。该架构 CPU 主要有高通、三星、苹果、华为海思、联发科等公司。"),r("strong",[t._v("这种 CPU 常用在手机上，包括安卓和苹果。")]),t._v("\nARM 处理器非常适用于"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E8%A1%8C%E5%8B%95%E9%80%9A%E8%A8%8A",target:"_blank",rel:"noopener noreferrer"}},[t._v("移动通信"),r("OutboundLink")],1),t._v("领域，符合其主要设计目标为低成本、高性能、低耗电的特性。"),r("strong",[t._v("另一方面，"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E8%B6%85%E7%BA%A7%E8%AE%A1%E7%AE%97%E6%9C%BA",target:"_blank",rel:"noopener noreferrer"}},[t._v("超级计算机"),r("OutboundLink")],1),t._v("消耗大量电能，ARM同样被视作更高效的选择。")]),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%AE%89%E8%AC%80%E6%8E%A7%E8%82%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("安谋控股"),r("OutboundLink")],1),t._v("（ARM Holdings）开发此架构并授权其他公司使用，以供他们实现ARM的某一个架构，开发自主的"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%8A%AF%E7%89%87",target:"_blank",rel:"noopener noreferrer"}},[t._v("系统单片机"),r("OutboundLink")],1),t._v("和系统模块（system-on-module，SoC）。")]),t._v(" "),r("p",[t._v("ARM 架构版本从 ARMv3 到 ARMv7 支持 32 位空间和 32 位算数运算，大部分架构的指令为定长 32 位（Thumb）指令集支持变长的"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E6%8C%87%E4%BB%A4%E9%9B%86%E6%9E%B6%E6%A7%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("指令集"),r("OutboundLink")],1),t._v("，提供对 32 位和 16 位指令集的支持），而 2011 年发布的 "),r("strong",[t._v("ARMv8-A 架构添加了对64 位空间和 64 位算术运算的支持，同时也更新了32 位定长指令集。")])]),t._v(" "),r("p",[t._v("小结：")]),t._v(" "),r("p",[t._v("CISC指令集架构的代表产品：X86系列，AMD和Intel两大公司生产的CPU大多是CISC架构的；")]),t._v(" "),r("p",[t._v("RISC指令集架构的代表产品：ARM系列，ARM广泛用于智能设备，也用于超级计算机上。")]),t._v(" "),r("h4",{attrs:{id:"_4-常见术语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-常见术语"}},[t._v("#")]),t._v(" 4.常见术语")]),t._v(" "),r("p",[t._v("x86、x86_64、x64、amd64这些术语都是用来描述计算机的处理器架构的")]),t._v(" "),r("ul",[r("li",[t._v("**x86：**这是一个指代 "),r("strong",[t._v("32 位 Intel 处理器架构")]),t._v("的术语，它源自 Intel 公司的 8086 系列微处理器，x86 "),r("strong",[t._v("泛指一系列基于 Intel 8086且向后兼容的"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("中央处理器"),r("OutboundLink")],1),t._v("指令集架构")]),t._v("。最早的 8086 处理器于 1978 年由 Intel 推出，为 16 位微处理器。该系列较早期的处理器名称是以数字来表示 80x86。由于以“86”作为结尾，包括 Intel 8086、80186、80286、80386 以及 80486，因此其架构被称为 “x86”。由于数字并不能作为"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E6%B3%A8%E5%86%8C%E5%95%86%E6%A0%87",target:"_blank",rel:"noopener noreferrer"}},[t._v("注册商标"),r("OutboundLink")],1),t._v("，因此 Intel 及其竞争者均在新一代处理器使用可注册的名称，如 "),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/Pentium",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pentium"),r("OutboundLink")],1),t._v("，来描述 x86 架构下的处理器产品。现时英特尔将其称为"),r("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/IA-32",target:"_blank",rel:"noopener noreferrer"}},[t._v("IA-32"),r("OutboundLink")],1),t._v("，全名为 “Intel Architecture, 32-bit”，一般情形下指代 32 位的架构。")]),t._v(" "),r("li",[r("strong",[t._v("x86_64")]),t._v(" 或 "),r("strong",[t._v("amd64")]),t._v("：x86-64（又称 "),r("strong",[t._v("x64")]),t._v("，即英文词 64-bit extended，64 位拓展的简写）是一个处理器的指令集架构，基于 x86 架构的 64 位拓展，向后兼容于 16 位及 32 位的 x86 架构。x64 于 1999 年由 AMD 设计，AMD 首次公开 64 位集以扩展给 x86，称为 “AMD64”。其后也为英特尔所采用，现时英特尔称之为 “Intel 64”，在之前曾使用过 “Clackamas Technology” (CT)、“IA-32e” 及 “EM64T”。")]),t._v(" "),r("li",[t._v("**x64：**这是 "),r("strong",[t._v("x86_64")]),t._v(" 或 "),r("strong",[t._v("amd64")]),t._v(" 的另一个常见别名，主要由 Microsoft 和 Oracle 使用。")])]),t._v(" "),r("p",[r("strong",[t._v("所以X86_64、x64、amd64 是一种CISC指令集架构的CPU")])]),t._v(" "),r("p",[r("strong",[t._v("ARM")]),t._v(" 和 "),r("strong",[t._v("AArch64")]),t._v(" 都是 ARM 架构，但它们指的是不同的指令集。")]),t._v(" "),r("ul",[r("li",[t._v("**ARM：**这通常指的是 32 位的 ARM 架构，也被称为 AArch32。这种架构在一些旧的或者对功耗和性能要求不高的设备上仍然被广泛使用，例如一些嵌入式设备或者微控制器。")]),t._v(" "),r("li",[t._v("**AArch64：**这是 ARMv8 架构引入的 64 位状态。这种架构在现代的高性能设备上更为常见，例如最新的智能手机和服务器。AArch64 有时也被称为 ARM64。")])]),t._v(" "),r("p",[r("strong",[t._v("所以ARM、AArch64 、arm64 是一种RISC指令集架构的CPU")])]),t._v(" "),r("p",[r("strong",[t._v("在进行软件开发和编译时，需要根据目标设备是使用 32 位 ARM 架构还是 64 位 AArch64 架构来选择合适的工具链和编译选项。")])]),t._v(" "),r("h4",{attrs:{id:"_5-查看设备处理器芯片架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-查看设备处理器芯片架构"}},[t._v("#")]),t._v(" 5.查看设备处理器芯片架构")]),t._v(" "),r("p",[t._v("Windows、Linux、macOS 系统可通过 "),r("code",[t._v("uname -m")]),t._v(" 命令，查看系统架构的相关信息。")]),t._v(" "),r("p",[t._v("注意：Mac 13.3输入"),r("code",[t._v("uname -m")]),t._v("本应该输出arm64或者aarch64，但是如果使用iTerm等shell工具，可能会修改"),r("code",[t._v("uname -m")]),t._v("的输出结果，展示x86_64，这个本身是错误的。")])])}),[],!1,null,null,null);r.default=n.exports}}]);